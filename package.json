{
  "name": "vscode-chapter-eval",
  "displayName": "Chapter Evaluator",
  "version": "0.8.21",
  "description": "Evaluate a chapter of novel with ChatGPT.",
  "main": "./dist/extension",
  "type": "commonjs",
  "publisher": "huangjien",
  "homepage": "https://github.com/huangjien/vscode-chapter-eval/blob/main/README.md",
  "bugs": {
    "url": "https://github.com/huangjien/vscode-chapter-eval/issues",
    "email": "huangjien@gmail.com"
  },
  "icon": "resources/chapter_eval.png",
  "repository": "https://github.com/huangjien/vscode-chapter-eval.git",
  "engines": {
    "vscode": "^1.93.0"
  },
  "activationEvents": [
    "onStartupFinished"
  ],
  "categories": [
    "Other"
  ],
  "author": "huangjien <huangjien@gmail.com>",
  "license": "MIT",
  "keywords": [
    "novel",
    "chapter",
    "evaluate",
    "score",
    "ChatGPT"
  ],
  "preview": false,
  "private": false,
  "scripts": {
    "vscode:prepublish": "yarn run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir dist",
    "watch-tests": "tsc -p . -w --outDir dist",
    "pretest": "yarn run compile-tests && yarn run compile && yarn run lint",
    "lint": "eslint ./src",
    "lint:fix": "eslint --fix ./src",
    "test": "node ./out/runTest.js",
    "prettier": "prettier --write .",
    "update-package-lock": "npm install --package-lock-only",
    "prepare": "husky"
  },
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Chapter Evaluator Configuration",
      "properties": {
        "vscodeChapterEval.modelLocation": {
          "type": "string",
          "enum": [
            "Local",
            "Remote"
          ],
          "default": "Remote",
          "description": "Use local ollama or remote open-ai?",
          "order": 0
        },
        "vscodeChapterEval.openaiApiKey": {
          "type": "string",
          "default": "",
          "order": 1,
          "description": "OpenAI API Key for Chapter Evaluator extension"
        },
        "vscodeChapterEval.model": {
          "type": "string",
          "enum": [
            "gpt-4o",
            "gpt-4o-mini",
            "gpt-3.5-turbo"
          ],
          "default": "gpt-4o-mini",
          "description": "Which ChatGPT model to use",
          "order": 2
        },
        "vscodeChapterEval.localModel": {
          "type": "string",
          "enum": [
            "llama3.1:latest",
            "qwen2:7b",
            "gemma:latest"
          ],
          "default": "llama3.1:latest",
          "description": "Which local ollama model to use",
          "order": 3
        },
        "vscodeChapterEval.prompt": {
          "type": "string",
          "order": 4,
          "default": "You are ASSISTANT , work as literary critic. Please evaluate the tension of the following chapter and give it a score out of 100. Also, describe the curve of the tension changes in the chapter. Point out the three most outstanding advantages and the three biggest disadvantages of the chapter. If you find any typographical errors, please point them out. \nUSER: $PROMPT$ \nASSISTANT: ",
          "description": "OpenAI API prompt for Chapter Evaluator extension"
        },
        "vscodeChapterEval.temperature": {
          "type": "number",
          "default": 0.7,
          "description": "Temperature to use for the GPT (between 0 (conservative) and 2 (creative))",
          "order": 5
        },
        "vscodeChapterEval.maxToken": {
          "type": "number",
          "default": 8192,
          "description": "Maximum number of tokens inside response per request",
          "order": 6
        }
      }
    },
    "keybindings": [
      {
        "command": "vscodeChapterEval.showExistedEvaluation",
        "key": "ctrl+e",
        "mac": "cmd+e",
        "when": "editorTextFocus"
      }
    ],
    "commands": [
      {
        "command": "vscodeChapterEval.evaluateMarkdown",
        "title": "Evaluate Chapter"
      },
      {
        "command": "vscodeChapterEval.showEvaluation",
        "title": "Show Evaluation"
      },
      {
        "command": "vscodeChapterEval.showExistedEvaluation",
        "title": "Existed Evaluation"
      },
      {
        "command": "vscodeChapterEval.formatMarkdown",
        "title": "Format Chapter"
      },
      {
        "command": "vscodeChapterEval.readOutLoud",
        "title": "Read Out Loud"
      },
      {
        "command": "vscodeChapterEval.showProgress",
        "title": "Evaluating ..."
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "vscodeChapterEval_markdownWebview",
          "title": "AI Helper",
          "icon": "resources/eval.svg"
        }
      ]
    },
    "views": {
      "vscodeChapterEval_markdownWebview": [
        {
          "type": "webview",
          "id": "vscodeChapterEval_markdownWebview",
          "name": "Chapter Evaluate",
          "contextualTitle": "Evaluation"
        },
        {
          "type": "webview",
          "id": "vscodeChapterEval_settingsWebview",
          "name": "Settings",
          "contextualTitle": "Settings"
        }
      ]
    },
    "menus": {
      "editor/context": [
        {
          "when": "resourceLangId == markdown || resourceLangId == plaintext",
          "command": "vscodeChapterEval.evaluateMarkdown",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == markdown || resourceLangId == plaintext",
          "command": "vscodeChapterEval.readOutLoud",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == markdown || resourceLangId == plaintext",
          "command": "vscodeChapterEval.formatMarkdown",
          "group": "navigation"
        }
      ]
    }
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.8",
    "@types/node": "^22.5.5",
    "@types/vscode": "^1.93.0",
    "@typescript-eslint/eslint-plugin": "^8.6.0",
    "@typescript-eslint/parser": "^8.6.0",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.10.0",
    "eslint-config-prettier": "^9.1.0",
    "glob": "^11.0.0",
    "marked": "^14.1.2",
    "mocha": "^10.7.3",
    "prettier": "^3.3.3",
    "ts-loader": "^9.5.1",
    "typescript": "^5.6.2",
    "typescript-eslint": "^8.6.0",
    "webpack": "^5.94.0",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "child_process": "^1.0.2",
    "crypto": "^1.0.1",
    "eslint-plugin-prettier": "^5.2.1",
    "husky": "^9.1.6",
    "openai": "^4.62.1"
  }
}
